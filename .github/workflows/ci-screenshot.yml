name: "📷 Screenshot Tests"

on:
  workflow_call:

jobs:

  record:
    name: "📸 Record"
    timeout-minutes: 10

    permissions:
      # actions/checkout
      contents: read

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-24.04
    steps:

      - name: "Calculate relevant SHA."
        id: params
        env:
          SHA: ${{ github.event.pull_request.base.sha || github.event.after }}
        # language=bash
        run: |
          echo "sha=${SHA}" >> "${GITHUB_OUTPUT}"

      - name: "Load cached golden values."
        id: cache
        uses: actions/cache/restore@v4
        with:
          key: golden-values-${{ steps.params.outputs.sha }}
          path: |
            modules/**/src/*/screenshotTest/reference/*.png
        # If exists (steps.cache.outputs.cache-hit == 'true'), then skip recording steps.

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.params.outputs.sha }}

      - name: "Set up Java."
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/setup-java@v4
        with:
          java-version-file: .java-version
          distribution: temurin

      - name: "Set up Gradle."
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: gradle/actions/setup-gradle@v3

      - name: "Record screenshots."
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        # language=bash
        run: >
          ./gradlew
          --continue
          --stacktrace
          updateDebugScreenshotTest

      - name: "Upload 'Screenshot Record Results' artifact."
        if: ${{ steps.cache.outputs.cache-hit != 'true' && (success() || failure()) }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Screenshot Record Results'
          if-no-files-found: error
          path: |
            modules/**/build/outputs/screenshotTest-results/preview/*/

      - name: "Upload 'Screenshot Golden Values' artifact."
        if: ${{ github.event_name == 'pull_request' && (success() || failure()) }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Screenshot Golden Values'
          if-no-files-found: error
          path: |
            modules/**/src/*/screenshotTest/reference/*.png

      - name: "Store golden values to cache."
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.cache.outputs.cache-primary-key }}
          path: |
            modules/**/src/*/screenshotTest/reference/*.png


  verify:
    name: "🔍 Verify"
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - record
    timeout-minutes: 10

    outputs:
      result: ${{ fromJSON(steps.results.outputs.json).conclusion }}

    permissions:
      # actions/checkout
      contents: read
      # EnricoMi/publish-unit-test-result-action
      checks: write

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-24.04
    steps:

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4

      - name: "Download 'Screenshot Golden Values' artifact."
        uses: actions/download-artifact@v4
        with:
          name: 'Screenshot Golden Values'
          # The recorded Golden Values are rooted at `modules/` because of the first `**` in the path.
          path: modules

      - name: "Set up Java."
        uses: actions/setup-java@v4
        with:
          java-version-file: .java-version
          distribution: temurin

      - name: "Set up Gradle."
        uses: gradle/actions/setup-gradle@v3

      - name: "Verify screenshots."
        # language=bash
        run: >
          ./gradlew
          --continue
          --stacktrace
          validateDebugScreenshotTest

      - name: "Upload 'Screenshot Test Results' artifact."
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: 'Screenshot Test Results'
          if-no-files-found: error
          path: |
            modules/**/build/reports/screenshotTest/preview/
            modules/**/build/outputs/screenshotTest-results/preview/*/
            modules/**/build/test-results/validate*ScreenshotTest/

      - name: "Publish '🔔 Test: Screenshot Results' check run."
        id: results
        if: ${{ success() || failure() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: '🔔 Test: Screenshot Results'
          comment_mode: off
          report_individual_runs: true
          action_fail_on_inconclusive: true
          test_changes_limit: 0
          junit_files: modules/**/build/test-results/validate*ScreenshotTest/TEST-*.xml


  report:
    name: "Deploy Report to GitHub Pages"
    if: ${{ needs.verify.outputs.result != 'success' }}
    needs:
      - verify
    timeout-minutes: 5

    environment:
      # Ideally this would deploy to separate GitHub Pages environments,
      # but for now that is not possible, the below works, but still ends up at the same endpoint URL:
      #name: screenshots-${{ github.ref_name }}
      # See https://github.com/orgs/community/discussions/47867
      # State in 2024 May:
      #  * amazing news: https://github.com/github/pages-gem/issues/724#issuecomment-1081294321
      #  * bad news: https://github.com/github/pages-gem/issues/724#issuecomment-1226497590
      name: screenshots
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      # actions/deploy-pages
      pages: write
      # actions/deploy-pages
      id-token: write

    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    steps:
      
      - name: "Download 'Screenshot Test Results' artifact."
        uses: actions/download-artifact@v4
        with:
          name: 'Screenshot Test Results'
          path: modules

      - name: "Generate index.html contents."
        id: contents
        env:
          FILES: |
            **/build/reports/screenshotTest/preview/*/index.html
          IDENTIFIER: >-
            ${{ github.ref }}@${{ github.sha }}
            (${{ github.event.pull_request.head.ref }}@${{ github.event.pull_request.head.sha }})
        uses: actions/github-script@v7
        with:
          result-encoding: string
          # language=javascript
          script: |
            const path = require("node:path");
            const files = process.env.FILES;
            const rootDir = process.env.GITHUB_WORKSPACE;
            const identifier = process.env.IDENTIFIER;
            const globOpts = {
                followSymbolicLinks: false,
                cwd: rootDir,
            };
            const globber = await glob.create(files, globOpts);
            const result = [];
            for await (const file of globber.globGenerator()) {
                result.push(path.relative(rootDir, file));
            }
            const heading = `<h1>Screenshot Test Reports</h1><p>${identifier}</p>`;
            const links = result.map(path => `<a href="${path}">${path}</a><br />`);
            return [heading, ...links].join("\n");

      - name: "Write 'index.html' file."
        env:
          INDEX_HTML: ${{ steps.contents.outputs.result }}
        # language=bash
        run: |
          echo "${INDEX_HTML}" > index.html

      - name: "Upload 'github-pages' artifact."
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

      - name: "Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@v4
